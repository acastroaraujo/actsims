[{"path":"https://acastroaraujo.github.io/actsims/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Andrés Castro Araújo Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://acastroaraujo.github.io/actsims/articles/actsims.html","id":"set-up","dir":"Articles","previous_headings":"","what":"Set up","title":"Introduction","text":"First, create “InteRactModel” R6 object. Dictionary Equations interact() uses group = default equations dictionaries. option exist actdata package, see error. can change defaults specifying second element either argument. example: InteRactModel objects come built methods can access via $ operator. Note. just simple function looks inside act$dictionary.","code":"act <- interact(dictionary = \"usfullsurveyor2015\", equations = \"us2010\") #> ✔ dictionary = list(dataset = \"usfullsurveyor2015\", group = \"all\") #> ✔ equations = list(key = \"us2010\", group = \"all\") act #>  #> ── Interact Analysis ─────────────────────────────────────────────────────────── #> ℹ Dictionary: usfullsurveyor2015 (group: all) #> ℹ Equations: us2010 #>   impressionabo (group: all) act$dictionary #> # A tibble: 2,403 × 5 #>    term          component ratings   n         sd        #>    <chr>         <chr>     <list>    <list>    <list>    #>  1 abandon       behavior  <dbl [3]> <dbl [3]> <dbl [3]> #>  2 abandoned     modifier  <dbl [3]> <dbl [3]> <dbl [3]> #>  3 abduct        behavior  <dbl [3]> <dbl [3]> <dbl [3]> #>  4 abet          behavior  <dbl [3]> <dbl [3]> <dbl [3]> #>  5 abhor         behavior  <dbl [3]> <dbl [3]> <dbl [3]> #>  6 able_bodied   modifier  <dbl [3]> <dbl [3]> <dbl [3]> #>  7 abort         behavior  <dbl [3]> <dbl [3]> <dbl [3]> #>  8 abortionist   identity  <dbl [3]> <dbl [3]> <dbl [3]> #>  9 absent_minded modifier  <dbl [3]> <dbl [3]> <dbl [3]> #> 10 abuse         behavior  <dbl [3]> <dbl [3]> <dbl [3]> #> # ℹ 2,393 more rows act$equations #>               Ae'   Ap'   Aa'   Be'   Bp'   Ba'   Oe'   Op'   Oa' #> (Intercept) -0.16 -0.06 -0.05 -0.26  0.09  0.21 -0.18  0.00 -0.14 #> Ae           0.62  0.00  0.00  0.52  0.00  0.00  0.00  0.00  0.00 #> Ap           0.00  0.57  0.00  0.00  0.53  0.00  0.00  0.00  0.00 #> Aa           0.00  0.00  0.26  0.00  0.00  0.15  0.00  0.00  0.00 #> Be           0.46 -0.29 -0.18  0.50 -0.21 -0.12  0.26  0.51  0.33 #> Bp           0.00  0.62  0.12  0.00  0.64  0.00  0.00 -0.57 -0.41 #> Ba           0.00  0.00  0.86  0.00  0.00  0.91  0.00  0.00  0.31 #> Oe           0.00  0.00  0.00  0.00  0.00  0.00  0.91  0.00  0.00 #> Op           0.00 -0.20  0.00  0.00  0.00  0.00  0.00  0.47  0.00 #> Oa           0.00  0.00  0.00  0.00  0.00  0.09  0.00  0.00  0.54 #> Ae:Be        0.00  0.00  0.00  0.00  0.00  0.00  0.16  0.00  0.54 #> Be:Oe        0.29  0.00  0.00  0.32  0.00  0.00  0.11  0.00  0.00 #> Bp:Oe       -0.22  0.00  0.00 -0.27  0.00  0.00 -0.15  0.00  0.00 #> Be:Oa       -0.09  0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00 #> Aa:Ba:Oe     0.00  0.00  0.00  0.00  0.00  0.00  0.00 -0.10  0.00 interact(dictionary = \"indiana2003\", equations = \"nc1978\") #> ✔ dictionary = list(dataset = \"indiana2003\", group = \"all\") #> ✔ equations = list(key = \"nc1978\", group = \"all\") #> ! equations groups: male and female #> Error: #> ! `all` not found in `nc1978` equations in `actdata` package interact(dictionary = \"indiana2003\", equations = list(\"nc1978\", \"male\")) #> ✔ dictionary = list(dataset = \"indiana2003\", group = \"all\") #>  #> ── Interact Analysis ─────────────────────────────────────────────────────────── #> ℹ Dictionary: indiana2003 (group: all) #> ℹ Equations: nc1978 #>   impressionabo (group: male) act$fundamentals(\"deadbeat\") #> # Source:  () #> # A data frame: 1 × 5 #>   term     component     e     p     a #> * <chr>    <chr>     <dbl> <dbl> <dbl> #> 1 deadbeat identity   -2.8 -2.57 -1.45"},{"path":"https://acastroaraujo.github.io/actsims/articles/actsims.html","id":"deflection","dir":"Articles","previous_headings":"","what":"Deflection","title":"Introduction","text":"can also extract useful metadata scores.","code":"d <- act$deflection(data.frame(A = \"god\", B = \"kill\", O = \"deadbeat\")) d #> # Event deflection #> # A data frame: 1 × 4 #>   A     B     O        deflection #> * <chr> <chr> <chr>         <dbl> #> 1 god   kill  deadbeat       173. get_fundamentals(d) #> # A tibble: 1 × 9 #>      Ae    Ap    Aa    Be    Bp    Ba    Oe    Op    Oa #>   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #> 1  3.19  3.45 -0.46 -4.26  1.95 -0.11  -2.8 -2.57 -1.45 get_transients(d) #> # A tibble: 1 × 9 #>      Ae    Ap    Aa    Be    Bp    Ba    Oe    Op    Oa #>   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #> 1  3.96  4.86 0.737  4.56  4.06 0.422 -3.88 -4.48 -10.5 get_element_wise_deflection(d) #> # A tibble: 1 × 9 #>      Ae    Ap    Aa    Be    Bp    Ba    Oe    Op    Oa #>   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #> 1 0.597  2.00  1.43  77.8  4.46 0.283  1.16  3.64  81.9"},{"path":"https://acastroaraujo.github.io/actsims/articles/actsims.html","id":"behaviors-and-reidentification","dir":"Articles","previous_headings":"","what":"Behaviors and Reidentification","title":"Introduction","text":"Optimal behaviors /reidentification uses deflection scores estimated $deflection() stored d. require specify perspective one behaving reidentifying. Behaviors Reidentification Closest Terms","code":"act$optimal_behavior(d, who = \"actor\") #> # A tibble: 1 × 3 #>      Be    Bp     Ba #>   <dbl> <dbl>  <dbl> #> 1  1.90  1.18 -0.637 act$optimal_behavior(d, who = \"object\") #> # A tibble: 1 × 3 #>      Be     Bp    Ba #>   <dbl>  <dbl> <dbl> #> 1 0.111 -0.525 0.233 act$reidentify(d, who = \"actor\") #> # A tibble: 1 × 3 #>       Ae    Ap    Aa #>    <dbl> <dbl> <dbl> #> 1 -0.999  2.35 0.848 act$reidentify(d, who = \"object\") #> # A tibble: 1 × 3 #>      Oe    Op    Oa #>   <dbl> <dbl> <dbl> #> 1 -1.26 -4.85 -11.1 act$closest_terms(list(e = 1, p = 0, a = -1), component = \"behavior\", max_dist = 0.5) #>        obey      bow_to      nuzzle comply_with  curtsey_to     gaze_at  #>      0.0581      0.1419      0.2141      0.2822      0.2948      0.4301  #>      stroke  #>      0.4806  deadbeat <- act$fundamentals(\"deadbeat\") deadbeat #> # Source:  () #> # A data frame: 1 × 5 #>   term     component     e     p     a #> * <chr>    <chr>     <dbl> <dbl> <dbl> #> 1 deadbeat identity   -2.8 -2.57 -1.45  act$closest_terms(deadbeat, component = \"modifier\", max_dist = 0.5) #>  uneducated incompetent    helpless    cowardly        poor  unemployed  #>      0.1581      0.2489      0.3126      0.3507      0.3901      0.4555"},{"path":"https://acastroaraujo.github.io/actsims/articles/actsims.html","id":"deference-score","dir":"Articles","previous_headings":"","what":"Deference Score","title":"Introduction","text":"can also create deference scores discussed Freeland & Hoey (2018). requires modify existing dictionary get right combination identities behaviors. seems easiest way : Note message appeared signaling replacement successful. Now just create another grid events, calculate deflection scores, average .","code":"act <- interact() #> ✔ dictionary = list(dataset = \"usfullsurveyor2015\", group = \"all\") #> ✔ equations = list(key = \"us2010\", group = \"all\")  defer_to <- act$dictionary |> ## save for later use   dplyr::filter(term == \"defer_to\")  occ <- interact(dictionary = \"occs2019\") #> ✔ equations = list(key = \"us2010\", group = \"all\") #> ✔ dictionary = list(dataset = \"occs2019\", group = \"all\") occ$dictionary #> # A tibble: 650 × 5 #>    term                             component ratings   n         sd        #>    <chr>                            <chr>     <list>    <list>    <list>    #>  1 911_dispatcher                   identity  <dbl [3]> <dbl [3]> <dbl [3]> #>  2 accountant                       identity  <dbl [3]> <dbl [3]> <dbl [3]> #>  3 actor                            identity  <dbl [3]> <dbl [3]> <dbl [3]> #>  4 actress                          identity  <dbl [3]> <dbl [3]> <dbl [3]> #>  5 actuary_for_an_insurance_company identity  <dbl [3]> <dbl [3]> <dbl [3]> #>  6 acupuncturist                    identity  <dbl [3]> <dbl [3]> <dbl [3]> #>  7 administrative_assistant         identity  <dbl [3]> <dbl [3]> <dbl [3]> #>  8 advertising_executive            identity  <dbl [3]> <dbl [3]> <dbl [3]> #>  9 advertising_salesman             identity  <dbl [3]> <dbl [3]> <dbl [3]> #> 10 aerobics_instructor              identity  <dbl [3]> <dbl [3]> <dbl [3]> #> # ℹ 640 more rows  occupations <- occ$dictionary$term ## save for later use  ## replace original dictionary occ$dictionary <- dplyr::bind_rows(defer_to, occ$dictionary) #> ✔ added new dictionary occ  #>  #> ── Interact Analysis ─────────────────────────────────────────────────────────── #> ℹ Dictionary: External [!] (group: ?) #> ℹ Equations: us2010 #>   impressionabo (group: all) events <- tidyr::crossing(   A = occupations,   B = \"defer_to\",   O = occupations )  output <- occ$deflection(events)  output |>    filter(A != O) |>    group_by(A) |>    summarize(avg = mean(deflection)) |>    arrange(desc(avg))  #> # A tibble: 650 × 2 #>    A                            avg #>    <chr>                      <dbl> #>  1 firefighter                 16.6 #>  2 fireman                     15.0 #>  3 paramedic                   13.9 #>  4 professional_athlete        12.4 #>  5 fire_department_lieutenant  12.3 #>  6 ambulance_driver            11.4 #>  7 auctioneer                  11.1 #>  8 dynamite_blaster            10.9 #>  9 911_dispatcher              10.9 #> 10 surgeon                     10.6 #> # ℹ 640 more rows"},{"path":"https://acastroaraujo.github.io/actsims/articles/actsims.html","id":"experimental","dir":"Articles","previous_headings":"","what":"Experimental","title":"Introduction","text":"things still experimental. API may change lot.","code":""},{"path":"https://acastroaraujo.github.io/actsims/articles/actsims.html","id":"modify-identity","dir":"Articles","previous_headings":"Experimental","what":"Modify Identity","title":"Introduction","text":"can create modified identities combining modifier terms ACT dictionaries. use traitid equations actdata package. $modify_identity method work unless first specify traitid equation. order must use $add_equation() method.","code":"act$modify_identity(list(M = \"angry\", I = \"doctor\")) #> Error in `act$modify_identity()`: #> ! must first set up `traitid` equation with the `$add_equation` method act$add_equation(type = \"traitid\", group = \"all\") #> ✔ traitid = list(key = \"us2010\", group = \"all\") act$modify_identity(list(M = \"angry\", I = \"doctor\"))  #> # A tibble: 1 × 3 #>   term          component ratings   #>   <chr>         <chr>     <list>    #> 1 angry__doctor identity  <dbl [3]>  act$fundamentals(\"academic\") #> # Source:  () #> # A data frame: 1 × 5 #>   term     component     e     p     a #> * <chr>    <chr>     <dbl> <dbl> <dbl> #> 1 academic identity   2.34  2.26 -0.12  grid <- data.frame(   M = c(\"tired\", \"taciturn\", \"angry\", \"happy\"),    I = c(\"academic\", \"academic\", \"academic\", \"academic\") )  out <- act$modify_identity(grid)  out |> tidyr::unnest_wider(ratings) #> # A tibble: 4 × 5 #>   term               component      e     p      a #>   <chr>              <chr>      <dbl> <dbl>  <dbl> #> 1 tired__academic    identity  -0.233 0.548 -1.53  #> 2 taciturn__academic identity   0.694 0.931 -0.834 #> 3 angry__academic    identity  -1.11  1.83   0.786 #> 4 happy__academic    identity   3.10  2.42   0.276"},{"path":"https://acastroaraujo.github.io/actsims/articles/actsims.html","id":"characteristic-emotion","dir":"Articles","previous_headings":"Experimental","what":"Characteristic Emotion","title":"Introduction","text":"","code":"act$add_equation(\"emotionid\", \"male\") #> ✔ emotionid = list(key = \"us2010\", group = \"male\") act$characteristic_emotion(list(I = \"brute\")) #> # A tibble: 1 × 3 #>      Me    Mp    Ma #>   <dbl> <dbl> <dbl> #> 1 -1.40  3.05  1.46  grid <- act$dictionary |>    dplyr::filter(component == \"identity\") |>    dplyr::sample_n(size = 10) |>    dplyr::select(I = term)  glimpse(grid) #> Rows: 10 #> Columns: 1 #> $ I <chr> \"censor\", \"grandson\", \"infant\", \"australian\", \"job_seeker\", \"truck_d…  act$characteristic_emotion(grid) #> # A tibble: 10 × 3 #>        Me      Mp    Ma #>     <dbl>   <dbl> <dbl> #>  1  1.82   0.759  0.945 #>  2 -0.289  2.62   0.230 #>  3  1.81   2.11   0.377 #>  4  2.43   0.692  1.42  #>  5 -4.82  -0.686  0.599 #>  6  2.43  -2.71   1.26  #>  7  2.05  -0.0783 0.893 #>  8  2.49   3.90   0.527 #>  9  1.56   1.10   0.883 #> 10  1.66  -0.279  0.347"},{"path":"https://acastroaraujo.github.io/actsims/articles/situations.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Situations","text":"functions power “Analyze Events” pane interactShiny. idea agent two-person interaction independent InteRactModel. newly created situation object contains various fields functions. empty $start() function used. example: look $start(): situation allows “method chaining” using $ operator. type code R-like. Instead, can use R’s pipe operator tandem sttn_* functions.","code":"situation <- define_situation(   agent1 = interact(), ## the idea is that each agent can be set up with   agent2 = interact()  ## different dictionaries and equations. ) #> ✔ dictionary = list(dataset = \"usfullsurveyor2015\", group = \"all\") #> ✔ equations = list(key = \"us2010\", group = \"all\") #> ✔ dictionary = list(dataset = \"usfullsurveyor2015\", group = \"all\") #> ✔ equations = list(key = \"us2010\", group = \"all\") situation$active  ## one of the two agents will be active at any given time #> [1] \"agent1\" situation$time #> NULL situation$history #> NULL situation$start(list(A = \"boyfriend\", B = \"hurt\", O = \"firefighter\")) opt_beh <- situation$optimal_behavior(who = \"agent2\") opt_beh #> # A tibble: 1 × 3 #>      Be    Bp     Ba #>   <dbl> <dbl>  <dbl> #> 1  1.40  4.30 0.0535 situation$agent2$closest_terms(opt_beh, component = \"behavior\")[1:5] #> [1] NA NA NA NA NA  situation$activate(\"agent2\") situation$new(list(A = \"firefighter\", B = \"babble_to\", O = \"boyfriend\"))  situation$history #> $deflection #> # A tibble: 2 × 7 #>    time agent1 agent2 A           B         O           deflection #>   <int> <chr>  <chr>  <chr>       <chr>     <chr>            <dbl> #> 1     0 A      O      boyfriend   hurt      firefighter       98.7 #> 2     1 O      A      firefighter babble_to boyfriend         72.4 #>  #> $fundamentals #> # A tibble: 2 × 15 #>    time agent1 agent2 A          B     O        Ae    Ap    Aa    Be    Bp    Ba #>   <int> <chr>  <chr>  <chr>      <chr> <chr> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #> 1     0 A      O      boyfriend  hurt  fire…  1.86  1.68  0.89 -3.17  1.06  0.92 #> 2     1 O      A      firefight… babb… boyf…  3.27  2.85  2.29 -0.89 -0.66  1.88 #> # ℹ 3 more variables: Oe <dbl>, Op <dbl>, Oa <dbl> #>  #> $transients #> # A tibble: 2 × 15 #>    time agent1 agent2 A       B     O         Ae    Ap    Aa     Be     Bp    Ba #>   <int> <chr>  <chr>  <chr>   <chr> <chr>  <dbl> <dbl> <dbl>  <dbl>  <dbl> <dbl> #> 1     0 A      O      boyfri… hurt  fire… -3.58   1.90 1.67  -5.13   2.32   1.77 #> 2     1 O      A      firefi… babb… boyf… -0.423 -1.25 0.794 -0.652 -0.755  1.69 #> # ℹ 3 more variables: Oe <dbl>, Op <dbl>, Oa <dbl> #>  #> $element_wise_deflection #> # A tibble: 2 × 15 #>    time agent1 agent2 A           B     O        Ae      Ap    Aa     Be      Bp #>   <int> <chr>  <chr>  <chr>       <chr> <chr> <dbl>   <dbl> <dbl>  <dbl>   <dbl> #> 1     0 A      O      boyfriend   hurt  fire…  29.6  0.0502 0.609 3.84   1.60    #> 2     1 O      A      firefighter babb… boyf…  13.6 16.8    2.24  0.0566 0.00894 #> # ℹ 4 more variables: Ba <dbl>, Oe <dbl>, Op <dbl>, Oa <dbl> situation$   activate(\"agent1\")$   start(list(A = \"employer\", B = \"hurt\", O = \"employee\"))$    activate(\"agent2\")$   new(list(A = \"employee\", B = \"pull_away_from\", O = \"employer\"))$   activate(\"agent1\")$   new(list(A = \"employer\", B = \"confront\", O = \"employee\"))$   history #> $deflection #> # A tibble: 3 × 7 #>    time agent1 agent2 A        B              O        deflection #>   <int> <chr>  <chr>  <chr>    <chr>          <chr>         <dbl> #> 1     0 A      O      employer hurt           employee       43.5 #> 2     1 O      A      employee pull_away_from employer       19.2 #> 3     2 A      O      employer confront       employee       13.3 #>  #> $fundamentals #> # A tibble: 3 × 15 #>    time agent1 agent2 A        B       O        Ae    Ap    Aa    Be    Bp    Ba #>   <int> <chr>  <chr>  <chr>    <chr>   <chr> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #> 1     0 A      O      employer hurt    empl…  1.57  2.56   0.7 -3.17  1.06  0.92 #> 2     1 O      A      employee pull_a… empl…  1.04 -0.37   0.2 -0.81  0.93 -0.6  #> 3     2 A      O      employer confro… empl…  1.57  2.56   0.7  0.39  1.99  1.28 #> # ℹ 3 more variables: Oe <dbl>, Op <dbl>, Oa <dbl> #>  #> $transients #> # A tibble: 3 × 15 #>    time agent1 agent2 A      B     O         Ae    Ap    Aa     Be     Bp     Ba #>   <int> <chr>  <chr>  <chr>  <chr> <chr>  <dbl> <dbl> <dbl>  <dbl>  <dbl>  <dbl> #> 1     0 A      O      emplo… hurt  empl… -1.79   3.05  1.62 -2.38   2.79   1.55  #> 2     1 O      A      emplo… pull… empl… -0.486 -1.26 -1.33 -0.472 -0.449 -0.680 #> 3     2 A      O      emplo… conf… empl… -0.662  1.83  1.35 -0.607  1.76   1.28  #> # ℹ 3 more variables: Oe <dbl>, Op <dbl>, Oa <dbl> #>  #> $element_wise_deflection #> # A tibble: 3 × 15 #>    time agent1 agent2 A       B     O        Ae    Ap    Aa    Be     Bp      Ba #>   <int> <chr>  <chr>  <chr>   <chr> <chr> <dbl> <dbl> <dbl> <dbl>  <dbl>   <dbl> #> 1     0 A      O      employ… hurt  empl… 11.3  0.240 0.848 0.622 3.00   3.98e-1 #> 2     1 O      A      employ… pull… empl…  2.33 0.795 2.33  0.114 1.90   6.43e-3 #> 3     2 A      O      employ… conf… empl…  4.98 0.531 0.424 0.995 0.0511 1.94e-5 #> # ℹ 3 more variables: Oe <dbl>, Op <dbl>, Oa <dbl>    situation$history$deflection #> # A tibble: 3 × 7 #>    time agent1 agent2 A        B              O        deflection #>   <int> <chr>  <chr>  <chr>    <chr>          <chr>         <dbl> #> 1     0 A      O      employer hurt           employee       43.5 #> 2     1 O      A      employee pull_away_from employer       19.2 #> 3     2 A      O      employer confront       employee       13.3 df <- situation |>    sttn_activate(\"agent1\") |>    sttn_start(list(A = \"employer\", B = \"hurt\", O = \"employee\")) |>    sttn_activate(\"agent2\") |>    sttn_new(list(A = \"employee\", B = \"pull_away_from\", O = \"employer\")) |>    sttn_activate(\"agent1\") |>    sttn_new(list(A = \"employer\", B = \"confront\", O = \"employee\")) |>    sttn_extract()    df$deflection #> # A tibble: 3 × 7 #>    time agent1 agent2 A        B              O        deflection #>   <int> <chr>  <chr>  <chr>    <chr>          <chr>         <dbl> #> 1     0 A      O      employer hurt           employee       43.5 #> 2     1 O      A      employee pull_away_from employer       19.2 #> 3     2 A      O      employer confront       employee       13.3 df$transients #> # A tibble: 3 × 15 #>    time agent1 agent2 A      B     O         Ae    Ap    Aa     Be     Bp     Ba #>   <int> <chr>  <chr>  <chr>  <chr> <chr>  <dbl> <dbl> <dbl>  <dbl>  <dbl>  <dbl> #> 1     0 A      O      emplo… hurt  empl… -1.79   3.05  1.62 -2.38   2.79   1.55  #> 2     1 O      A      emplo… pull… empl… -0.486 -1.26 -1.33 -0.472 -0.449 -0.680 #> 3     2 A      O      emplo… conf… empl… -0.662  1.83  1.35 -0.607  1.76   1.28  #> # ℹ 3 more variables: Oe <dbl>, Op <dbl>, Oa <dbl>"},{"path":"https://acastroaraujo.github.io/actsims/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"andrés castro araújo. Author, maintainer.","code":""},{"path":"https://acastroaraujo.github.io/actsims/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"castro araújo (2024). actsims: inteRact using R6. R package version 0.0.0.9000, https://acastroaraujo.github.io/actsims/, https://github.com/acastroaraujo/actsims.","code":"@Manual{,   title = {actsims: inteRact using R6},   author = {andrés {castro araújo}},   year = {2024},   note = {R package version 0.0.0.9000, https://acastroaraujo.github.io/actsims/},   url = {https://github.com/acastroaraujo/actsims}, }"},{"path":"https://acastroaraujo.github.io/actsims/index.html","id":"actsims","dir":"","previous_headings":"","what":"inteRact using R6","title":"inteRact using R6","text":"Summary actsims ACT package used internal development interactShiny meant fast easy use. integrated actdata package. uses R6 OOP system keep better track EPA ratings transient impression equations. Installation can install development version actsims Github :","code":"# install.packages(\"devtools\") devtools::install_github(\"acastroaraujo/actsims\")"},{"path":"https://acastroaraujo.github.io/actsims/reference/InteRactModel.html","id":null,"dir":"Reference","previous_headings":"","what":"InteRactModel objects — InteRactModel","title":"InteRactModel objects — InteRactModel","text":"InteRactModel object R6 object created interact() function. object stores (1) $dictionary EPA ratings (2) set $equations used calculate \"transient impressions.\"","code":""},{"path":"https://acastroaraujo.github.io/actsims/reference/InteRactModel.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"InteRactModel objects — InteRactModel","text":"InteRactModel objects following associated methods, many documentation pages: $deflection() $optimal_behavior() $reidentify() $max_confirm() $closest_terms() $modify_identity() $characteristic_emotion()","code":""},{"path":"https://acastroaraujo.github.io/actsims/reference/Situation.html","id":null,"dir":"Reference","previous_headings":"","what":"Situation Objects — Situation","title":"Situation Objects — Situation","text":"Situation object R6 object created define_situation() function. object stores two InteRactModel objects. also provides methods starting situations ($start), adding new interactions ($new), calculating optimal behaviors ($optimal_behavior), reidentification ($reidentify). can alternatively use sttn_* family functions purposes.","code":""},{"path":"https://acastroaraujo.github.io/actsims/reference/actsims-package.html","id":null,"dir":"Reference","previous_headings":"","what":"actsims: inteRact using R6 — actsims-package","title":"actsims: inteRact using R6 — actsims-package","text":"inteRact, using R6.","code":""},{"path":[]},{"path":"https://acastroaraujo.github.io/actsims/reference/actsims-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"actsims: inteRact using R6 — actsims-package","text":"Maintainer: andrés castro araújo andres.castro.araujo@duke.edu","code":""},{"path":"https://acastroaraujo.github.io/actsims/reference/define_situation.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Definition of the Situation — define_situation","title":"Create a Definition of the Situation — define_situation","text":"Create Definition Situation","code":""},{"path":"https://acastroaraujo.github.io/actsims/reference/define_situation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Definition of the Situation — define_situation","text":"","code":"define_situation(agent1, agent2)"},{"path":"https://acastroaraujo.github.io/actsims/reference/define_situation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Definition of the Situation — define_situation","text":"agent1 InteRactModel created interact() function agent2 InteRactModel created interact() function","code":""},{"path":"https://acastroaraujo.github.io/actsims/reference/define_situation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Definition of the Situation — define_situation","text":"Situation R6 object.","code":""},{"path":"https://acastroaraujo.github.io/actsims/reference/deflection_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract deflection score attributes — deflection_attributes","title":"Extract deflection score attributes — deflection_attributes","text":"Fundamentals, transients, element-wise deflection.","code":""},{"path":"https://acastroaraujo.github.io/actsims/reference/deflection_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract deflection score attributes — deflection_attributes","text":"","code":"get_fundamentals(x)  get_transients(x)  get_element_wise_deflection(x)  get_long_form(x)"},{"path":"https://acastroaraujo.github.io/actsims/reference/deflection_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract deflection score attributes — deflection_attributes","text":"x \"event_deflection\" object created $deflection() method","code":""},{"path":"https://acastroaraujo.github.io/actsims/reference/deflection_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract deflection score attributes — deflection_attributes","text":"data frame containing either fundamentals, transients, element-wise deflection scores","code":""},{"path":"https://acastroaraujo.github.io/actsims/reference/deflection_attributes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract deflection score attributes — deflection_attributes","text":"","code":"act <- interact(\"indiana2003\", list(\"nc1978\", \"female\")) #> ✔ dictionary = list(dataset = \"indiana2003\", group = \"all\")  grid <- expand.grid(   A = \"girlfriend\",   B = c(\"help\", \"retaliate_against\", \"torment\", \"interrogate\"),   O = \"boyfriend\" )  d <- act$deflection(grid) d #> # Event deflection #> # A data frame: 4 × 4 #>   A          B                 O         deflection #> * <chr>      <chr>             <chr>          <dbl> #> 1 girlfriend help              boyfriend       2.48 #> 2 girlfriend retaliate_against boyfriend       9.19 #> 3 girlfriend torment           boyfriend      16.4  #> 4 girlfriend interrogate       boyfriend       7.35 get_fundamentals(d) #> # A tibble: 4 × 9 #>      Ae    Ap    Aa    Be    Bp    Ba    Oe    Op    Oa #>   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #> 1  2.46  1.62  1.27  3.00 2.58  1.46   1.72  1.37  1.08 #> 2  2.46  1.62  1.27 -1.33 0.49  0.85   1.72  1.37  1.08 #> 3  2.46  1.62  1.27 -2.54 0.865 0.575  1.72  1.37  1.08 #> 4  2.46  1.62  1.27 -0.77 1.27  1.00   1.72  1.37  1.08 get_transients(d) #> # A tibble: 4 × 9 #>        Ae    Ap    Aa     Be    Bp    Ba    Oe      Op    Oa #>     <dbl> <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl>   <dbl> <dbl> #> 1  2.99    1.51  1.37  2.34  1.66  1.66  1.78   0.477  0.845 #> 2  0.0737  1.29  1.50 -0.911 0.814 1.09  0.796 -0.0678 0.759 #> 3 -0.838   1.57  1.52 -1.84  1.22  0.867 0.470 -0.393  0.735 #> 4  0.386   1.50  1.50 -0.520 1.27  1.21  0.896 -0.0890 0.770 get_element_wise_deflection(d) #> # A tibble: 4 × 9 #>       Ae      Ap     Aa     Be        Bp     Ba      Oe    Op     Oa #>    <dbl>   <dbl>  <dbl>  <dbl>     <dbl>  <dbl>   <dbl> <dbl>  <dbl> #> 1  0.283 0.0116  0.0109 0.435  0.849     0.0374 0.00338 0.797 0.0528 #> 2  5.67  0.108   0.0538 0.172  0.105     0.0586 0.854   2.07  0.100  #> 3 10.8   0.00206 0.0605 0.484  0.127     0.0855 1.56    3.11  0.116  #> 4  4.28  0.0138  0.0537 0.0623 0.0000189 0.0434 0.680   2.13  0.0931 get_long_form(d) #> # A tibble: 36 × 9 #>    A          B     O     id    dim   fundamentals transients deflections entity #>    <chr>      <chr> <chr> <chr> <chr>        <dbl>      <dbl>       <dbl> <chr>  #>  1 girlfriend help  boyf… A     e             2.46     2.99       0.283   girlf… #>  2 girlfriend help  boyf… A     p             1.62     1.51       0.0116  girlf… #>  3 girlfriend help  boyf… A     a             1.27     1.37       0.0109  girlf… #>  4 girlfriend help  boyf… B     e             3.00     2.34       0.435   help   #>  5 girlfriend help  boyf… B     p             2.58     1.66       0.849   help   #>  6 girlfriend help  boyf… B     a             1.46     1.66       0.0374  help   #>  7 girlfriend help  boyf… O     e             1.72     1.78       0.00338 boyfr… #>  8 girlfriend help  boyf… O     p             1.37     0.477      0.797   boyfr… #>  9 girlfriend help  boyf… O     a             1.08     0.845      0.0528  boyfr… #> 10 girlfriend reta… boyf… A     e             2.46     0.0737     5.67    girlf… #> # ℹ 26 more rows"},{"path":"https://acastroaraujo.github.io/actsims/reference/interact.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new InteRactModel object — interact","title":"Create a new InteRactModel object — interact","text":"Create new InteRactModel object specifying dictionary equation names available actdata package.","code":""},{"path":"https://acastroaraujo.github.io/actsims/reference/interact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new InteRactModel object — interact","text":"","code":"interact(   dictionary = list(\"usfullsurveyor2015\", \"all\"),   equations = list(\"us2010\", \"all\") )"},{"path":"https://acastroaraujo.github.io/actsims/reference/interact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new InteRactModel object — interact","text":"dictionary (character) dictionary name group. default set list(\"usfullsurveyor2015\", \"\"). See available options using actdata::dataset_keys() equations (character) equations name group. default set list(\"usfullsurveyor2015\", \"\"). See available options using actdata::equations Currently equations \"equation_type == impressionabo\" valid.","code":""},{"path":"https://acastroaraujo.github.io/actsims/reference/interact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new InteRactModel object — interact","text":"InteRactModel object.","code":""},{"path":"https://acastroaraujo.github.io/actsims/reference/interact.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new InteRactModel object — interact","text":"","code":"act <- interact(   dictionary = list(dataset = \"indiana2003\", group = \"all\"),   equations = list(key = \"nc1978\", group = \"male\") )  act$equations #>               Ae'   Ap'   Aa'   Be'   Bp'   Ba'   Oe'   Op'   Oa' #> (Intercept) -0.26 -0.10  0.14 -0.19  0.06  0.11 -0.11 -0.37  0.02 #> Ae           0.41  0.00  0.05  0.11  0.00  0.02  0.00  0.00  0.00 #> Ap           0.00  0.56  0.00  0.00  0.16 -0.06  0.00  0.00  0.00 #> Aa           0.00  0.06  0.64  0.00  0.00  0.27  0.00  0.00  0.00 #> Be           0.42 -0.07 -0.06  0.53 -0.13  0.04  0.11  0.18  0.02 #> Bp          -0.02  0.44  0.00  0.00  0.70  0.00  0.00 -0.11  0.00 #> Ba          -0.10  0.00  0.29 -0.12  0.00  0.64  0.00  0.00  0.00 #> Oe           0.03  0.04  0.00  0.00  0.03  0.00  0.61 -0.08  0.03 #> Op           0.06  0.00  0.00  0.05  0.01  0.00  0.00  0.66 -0.05 #> Oa           0.00  0.00  0.00  0.00  0.00  0.00  0.03  0.07  0.66 #> Ae:Be        0.05  0.00  0.00  0.00  0.01  0.00  0.03  0.00  0.00 #> Ae:Op        0.03  0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00 #> Ap:Bp        0.00 -0.05  0.00  0.00  0.00  0.00  0.00  0.00  0.00 #> Aa:Ba        0.00  0.00 -0.06  0.00  0.00  0.00  0.00  0.00  0.00 #> Be:Oe        0.12  0.01  0.00  0.11  0.03  0.00  0.04  0.03  0.00 #> Be:Op       -0.05  0.00  0.00 -0.05  0.00  0.00  0.00  0.03  0.00 #> Bp:Oe       -0.05  0.00  0.00 -0.02  0.00  0.00 -0.03  0.00  0.00 #> Bp:Op        0.00  0.00  0.00  0.00  0.00  0.00  0.00 -0.05  0.00 #> Ae:Be:Oe     0.03  0.00  0.00  0.02  0.00  0.00  0.00  0.00  0.00 #> Ae:Be:Op    -0.02  0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00  act$fundamentals(c(\"accuse\", \"mother\", \"surgeon\")) #> # Source:  () #> # A data frame: 4 × 5 #>   term    component     e     p     a #> * <chr>   <chr>     <dbl> <dbl> <dbl> #> 1 accuse  behavior  -1.58  0.51 0.77  #> 2 mother  behavior   2.52  2.08 0.505 #> 3 mother  identity   2.8   2.47 1.30  #> 4 surgeon identity   2.76  2.82 0.81   act$dictionary #> # A tibble: 1,501 × 5 #>    term            component ratings   n         sd        #>    <chr>           <chr>     <list>    <list>    <list>    #>  1 abandon         behavior  <dbl [3]> <dbl [3]> <dbl [3]> #>  2 abortion_clinic setting   <dbl [3]> <dbl [3]> <dbl [3]> #>  3 abortionist     identity  <dbl [3]> <dbl [3]> <dbl [3]> #>  4 abuse           behavior  <dbl [3]> <dbl [3]> <dbl [3]> #>  5 abusive         modifier  <dbl [3]> <dbl [3]> <dbl [3]> #>  6 accommodate     behavior  <dbl [3]> <dbl [3]> <dbl [3]> #>  7 accommodating   modifier  <dbl [3]> <dbl [3]> <dbl [3]> #>  8 accuse          behavior  <dbl [3]> <dbl [3]> <dbl [3]> #>  9 address         behavior  <dbl [3]> <dbl [3]> <dbl [3]> #> 10 admonish        behavior  <dbl [3]> <dbl [3]> <dbl [3]> #> # ℹ 1,491 more rows"},{"path":"https://acastroaraujo.github.io/actsims/reference/method-add-equation.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up additional transformation equations — method-add-equation","title":"Set up additional transformation equations — method-add-equation","text":"$add_equation() method allows inclusion equations. Adding \"emotionid\" needed use $characteristic_emotion() method. Adding \"traitid\" needed use $modify_identity() method.","code":""},{"path":"https://acastroaraujo.github.io/actsims/reference/method-add-equation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up additional transformation equations — method-add-equation","text":"","code":"add_equation(   type = c(\"emotionid\", \"traitid\"),   group = c(\"all\", \"female\", \"male\") )"},{"path":"https://acastroaraujo.github.io/actsims/reference/method-add-equation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up additional transformation equations — method-add-equation","text":"type one \"emotionid\" \"traitid\" group one \"\", \"female\", \"male\"","code":""},{"path":[]},{"path":"https://acastroaraujo.github.io/actsims/reference/method-add-equation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set up additional transformation equations — method-add-equation","text":"","code":"act <- interact() #> ✔ dictionary = list(dataset = \"usfullsurveyor2015\", group = \"all\") #> ✔ equations = list(key = \"us2010\", group = \"all\") act #>  #> ── Interact Analysis ─────────────────────────────────────────────────────────── #> ℹ Dictionary: usfullsurveyor2015 (group: all) #> ℹ Equations: us2010 #>   impressionabo (group: all)  act$add_equation(type = \"traitid\", group = \"all\") #> ✔ traitid = list(key = \"us2010\", group = \"all\") act #>  #> ── Interact Analysis ─────────────────────────────────────────────────────────── #> ℹ Dictionary: usfullsurveyor2015 (group: all) #> ℹ Equations: us2010 #>   impressionabo (group: all) #>   traitid (group: all)  act$add_equation(type = \"emotionid\", group = \"male\") #> ✔ emotionid = list(key = \"us2010\", group = \"male\") act #>  #> ── Interact Analysis ─────────────────────────────────────────────────────────── #> ℹ Dictionary: usfullsurveyor2015 (group: all) #> ℹ Equations: us2010 #>   impressionabo (group: all) #>   traitid (group: all) #>   emotionid (group: male)"},{"path":"https://acastroaraujo.github.io/actsims/reference/method-characteristic-emotion.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate EPA profile of a characteristic emotion — method-characteristic-emotion","title":"Estimate EPA profile of a characteristic emotion — method-characteristic-emotion","text":"Estimate EPA profile characteristic emotion","code":""},{"path":"https://acastroaraujo.github.io/actsims/reference/method-characteristic-emotion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate EPA profile of a characteristic emotion — method-characteristic-emotion","text":"","code":"characteristic_emotion(events)"},{"path":"https://acastroaraujo.github.io/actsims/reference/method-characteristic-emotion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate EPA profile of a characteristic emotion — method-characteristic-emotion","text":"events data frame column (\"identity\")","code":""},{"path":[]},{"path":"https://acastroaraujo.github.io/actsims/reference/method-characteristic-emotion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate EPA profile of a characteristic emotion — method-characteristic-emotion","text":"","code":"act <- interact() #> ✔ dictionary = list(dataset = \"usfullsurveyor2015\", group = \"all\") #> ✔ equations = list(key = \"us2010\", group = \"all\")  act$add_equation(type = \"emotionid\", group = \"male\") #> ✔ emotionid = list(key = \"us2010\", group = \"male\")  act$characteristic_emotion(list(I = \"brute\")) #> # A tibble: 1 × 3 #>      Me    Mp    Ma #>   <dbl> <dbl> <dbl> #> 1 -1.40  3.05  1.46  x <- list(I = c(\"censor\", \"grandson\", \"infant\", \"australian\", \"job_seeker\")) act$characteristic_emotion(x) #> # A tibble: 5 × 3 #>       Me      Mp    Ma #>    <dbl>   <dbl> <dbl> #> 1  1.82   0.759  0.945 #> 2 -0.289  2.62   0.230 #> 3  2.43   0.692  1.42  #> 4  2.43  -2.71   1.26  #> 5  2.05  -0.0783 0.893"},{"path":"https://acastroaraujo.github.io/actsims/reference/method-closest-terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Get closest terms to an EPA profile — method-closest-terms","title":"Get closest terms to an EPA profile — method-closest-terms","text":"$closest_terms() method ..","code":""},{"path":"https://acastroaraujo.github.io/actsims/reference/method-closest-terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get closest terms to an EPA profile — method-closest-terms","text":"","code":"closest_terms(   epa,   component = c(\"identity\", \"behavior\", \"modifier\"),   max_dist = 1 )"},{"path":"https://acastroaraujo.github.io/actsims/reference/method-closest-terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get closest terms to an EPA profile — method-closest-terms","text":"epa vector list epa ratings component vector list epa ratings max_dist positive real number also works one row data frame e, p, columns","code":""},{"path":"https://acastroaraujo.github.io/actsims/reference/method-closest-terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get closest terms to an EPA profile — method-closest-terms","text":"list closest terms found $dictionary, sorted closeness.","code":""},{"path":[]},{"path":"https://acastroaraujo.github.io/actsims/reference/method-closest-terms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get closest terms to an EPA profile — method-closest-terms","text":"","code":"act <- interact() #> ✔ dictionary = list(dataset = \"usfullsurveyor2015\", group = \"all\") #> ✔ equations = list(key = \"us2010\", group = \"all\")  act$closest_terms(c(e = 2, p = 1, a = 0), component = \"identity\", max_dist = 0.2) #>             lady graduate_student    forest_ranger      wage_earner  #>           0.0145           0.0227           0.0501           0.0826  #>            baker    social_worker       non_smoker     nutritionist  #>           0.0945           0.0973           0.1034           0.1556  #>           artist  #>           0.1829  act$closest_terms(c(e = 2, p = 1, a = 0), component = \"behavior\", max_dist = 0.2) #>     turn_to     consult         ask  agree_with   ask_about      answer  #>      0.0566      0.0801      0.0923      0.1022      0.1649      0.1808  #>   dine_with concur_with  #>      0.1934      0.1978  act$closest_terms(c(e = 2, p = 1, a = 0), component = \"modifier\", max_dist = 0.2) #> light_hearted          cute       dutiful      carefree       gourmet  #>        0.0474        0.1396        0.1709        0.1982        0.1997   ## Using `$closest_terms()` on event deflection data frames  d <- act$deflection(list(A = \"ceo\", B = \"kick\", O = \"ceo\")) d #> # Event deflection #> # A data frame: 1 × 4 #>   A     B     O     deflection #> * <chr> <chr> <chr>      <dbl> #> 1 ceo   kick  ceo         30.2 opt_reidentify <- act$reidentify(d, who = \"object\") opt_reidentify #> # A tibble: 1 × 3 #>       Oe    Op    Oa #>    <dbl> <dbl> <dbl> #> 1 -0.507 -2.63 -1.91 act$closest_terms(opt_reidentify, max_dist = 1) #>          nobody          victim        weakling         shut_in         cripple  #>       0.1665388       0.4721416       0.6651541       0.7311867       0.7626249  #> homeless_person           dummy  #>       0.8316222       0.8925427  opt_behavior <- act$optimal_behavior(d, who = \"object\") act$closest_terms(opt_behavior, max_dist = 0.5, component = \"behavior\") #>      defeat   apprehend debate_with    confront   challenge        urge  #>   0.1659501   0.3250959   0.3304993   0.3353730   0.4298606   0.4782635  #>  sleep_with  #>   0.4949517"},{"path":"https://acastroaraujo.github.io/actsims/reference/method-deflection.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate ABO event deflection scores — method-deflection","title":"Calculate ABO event deflection scores — method-deflection","text":"$deflection() method calculates deflection ABO event.","code":""},{"path":"https://acastroaraujo.github.io/actsims/reference/method-deflection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate ABO event deflection scores — method-deflection","text":"","code":"deflection(events)"},{"path":"https://acastroaraujo.github.io/actsims/reference/method-deflection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate ABO event deflection scores — method-deflection","text":"events data frame , B, O exist within $dictionary field","code":""},{"path":"https://acastroaraujo.github.io/actsims/reference/method-deflection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate ABO event deflection scores — method-deflection","text":"\"Event deflection\" data frame. data frame event_deflection S3 class custom printing works seamlessly family get_* functions.","code":""},{"path":[]},{"path":"https://acastroaraujo.github.io/actsims/reference/method-deflection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate ABO event deflection scores — method-deflection","text":"","code":"act <- interact() #> ✔ dictionary = list(dataset = \"usfullsurveyor2015\", group = \"all\") #> ✔ equations = list(key = \"us2010\", group = \"all\") act$deflection(data.frame(A = \"mother\", B = \"kick\", O = \"baby\")) #> # Event deflection #> # A data frame: 1 × 4 #>   A      B     O     deflection #> * <chr>  <chr> <chr>      <dbl> #> 1 mother kick  baby        64.0  grid <- expand.grid(   A = c(\"girlfriend\", \"medic\", \"bohemian\", \"dairy_farmer\", \"daredevil\"),   B = c(\"help\", \"retaliate_against\", \"torment\", \"interrogate\"),   O = c(\"toddler\", \"capitalist\", \"boyfriend\", \"prisoner\") )  head(grid, n = 15) #>               A                 B       O #> 1    girlfriend              help toddler #> 2         medic              help toddler #> 3      bohemian              help toddler #> 4  dairy_farmer              help toddler #> 5     daredevil              help toddler #> 6    girlfriend retaliate_against toddler #> 7         medic retaliate_against toddler #> 8      bohemian retaliate_against toddler #> 9  dairy_farmer retaliate_against toddler #> 10    daredevil retaliate_against toddler #> 11   girlfriend           torment toddler #> 12        medic           torment toddler #> 13     bohemian           torment toddler #> 14 dairy_farmer           torment toddler #> 15    daredevil           torment toddler  act$deflection(grid) #> # Event deflection #> # A data frame: 80 × 4 #>    A            B                 O       deflection #>  * <chr>        <chr>             <chr>        <dbl> #>  1 girlfriend   help              toddler      14.5  #>  2 medic        help              toddler      25.0  #>  3 bohemian     help              toddler       8.87 #>  4 dairy_farmer help              toddler      11.4  #>  5 daredevil    help              toddler      11.5  #>  6 girlfriend   retaliate_against toddler      15.8  #>  7 medic        retaliate_against toddler      21.2  #>  8 bohemian     retaliate_against toddler      10.8  #>  9 dairy_farmer retaliate_against toddler      16.4  #> 10 daredevil    retaliate_against toddler       8.96 #> # ℹ 70 more rows"},{"path":"https://acastroaraujo.github.io/actsims/reference/method-fundamentals.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup EPA ratings of terms in a $dictionary — method-fundamentals","title":"Lookup EPA ratings of terms in a $dictionary — method-fundamentals","text":"$fundamentals() method ..","code":""},{"path":"https://acastroaraujo.github.io/actsims/reference/method-fundamentals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup EPA ratings of terms in a $dictionary — method-fundamentals","text":"","code":"fundamentals(x)"},{"path":"https://acastroaraujo.github.io/actsims/reference/method-fundamentals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lookup EPA ratings of terms in a $dictionary — method-fundamentals","text":"x (character) terms contained within $dictionary","code":""},{"path":"https://acastroaraujo.github.io/actsims/reference/method-fundamentals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lookup EPA ratings of terms in a $dictionary — method-fundamentals","text":"data frame EPA profiles","code":""},{"path":[]},{"path":"https://acastroaraujo.github.io/actsims/reference/method-fundamentals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lookup EPA ratings of terms in a $dictionary — method-fundamentals","text":"","code":"act <- interact() #> ✔ dictionary = list(dataset = \"usfullsurveyor2015\", group = \"all\") #> ✔ equations = list(key = \"us2010\", group = \"all\")  act$fundamentals(\"ceo\") #> # Source:  () #> # A data frame: 1 × 5 #>   term  component     e     p     a #> * <chr> <chr>     <dbl> <dbl> <dbl> #> 1 ceo   identity   0.71  3.22  1.48  x <- sample(act$dictionary$term, size = 20) act$fundamentals(x) #> # Source:  () #> # A data frame: 21 × 5 #>    term       component     e     p     a #>  * <chr>      <chr>     <dbl> <dbl> <dbl> #>  1 alarm      behavior  -0.36  1.43  2.22 #>  2 ally       identity   2.34  2.15 -0.16 #>  3 command    behavior  -0.43  2.22  1.68 #>  4 confidant  identity   2.43  2.32 -0.64 #>  5 constrain  behavior  -1.91  1.47  0.65 #>  6 contented  modifier   2.35  1.7  -0.74 #>  7 convince   behavior   1.11  2.14  0.58 #>  8 displeased modifier  -2.07 -0.32 -0.7  #>  9 exalt      behavior   0.72  1.08  1.08 #> 10 housewife  identity   1.79  0.39 -0.14 #> # ℹ 11 more rows"},{"path":"https://acastroaraujo.github.io/actsims/reference/method-max-confirm.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify the behavior that would maximally confirm the identities of actor in an actor-object pairing — method-max-confirm","title":"Identify the behavior that would maximally confirm the identities of actor in an actor-object pairing — method-max-confirm","text":"$max_confirm(..., solve_for = \"behavior\") method identify behavior maximally confirm identities actor actor-object pairing. ..","code":""},{"path":"https://acastroaraujo.github.io/actsims/reference/method-max-confirm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify the behavior that would maximally confirm the identities of actor in an actor-object pairing — method-max-confirm","text":"","code":"max_confirm(events, solve_for = c(\"behavior\", \"actor\", \"object\"))"},{"path":"https://acastroaraujo.github.io/actsims/reference/method-max-confirm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify the behavior that would maximally confirm the identities of actor in an actor-object pairing — method-max-confirm","text":"events data frame pair , B, O. solve_for \"behavior\", \"actor\", \"object\"","code":""},{"path":"https://acastroaraujo.github.io/actsims/reference/method-max-confirm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify the behavior that would maximally confirm the identities of actor in an actor-object pairing — method-max-confirm","text":"data frame maximally confirming EPA profiles","code":""},{"path":[]},{"path":"https://acastroaraujo.github.io/actsims/reference/method-max-confirm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify the behavior that would maximally confirm the identities of actor in an actor-object pairing — method-max-confirm","text":"","code":"act <- interact() #> ✔ dictionary = list(dataset = \"usfullsurveyor2015\", group = \"all\") #> ✔ equations = list(key = \"us2010\", group = \"all\")  act$max_confirm(   events = dplyr::tibble(A = \"god\", O = \"deadbeat\"),   solve_for = \"behavior\" ) #> # A tibble: 1 × 3 #>      Be    Bp     Ba #>   <dbl> <dbl>  <dbl> #> 1 0.545  1.54 -0.634  act$max_confirm(   events = list(A = \"god\", B = \"kill\"),   solve_for = \"object\" ) #> # A tibble: 1 × 3 #>      Oe    Op    Oa #>   <dbl> <dbl> <dbl> #> 1 -1.26 -4.85 -11.1  act$max_confirm(   events = data.frame(B = \"kill\", O = \"deadbeat\"),   solve_for = \"actor\" ) #> # A tibble: 1 × 3 #>       Ae    Ap    Aa #>    <dbl> <dbl> <dbl> #> 1 -0.999  2.35 0.848"},{"path":"https://acastroaraujo.github.io/actsims/reference/method-modify-identity.html","id":null,"dir":"Reference","previous_headings":"","what":"Create EPA profile for modified identities — method-modify-identity","title":"Create EPA profile for modified identities — method-modify-identity","text":"$modify_identity() applies modifier equations (traitid) find EPA profile modified identity.","code":""},{"path":"https://acastroaraujo.github.io/actsims/reference/method-modify-identity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create EPA profile for modified identities — method-modify-identity","text":"","code":"modify_identity(events)"},{"path":"https://acastroaraujo.github.io/actsims/reference/method-modify-identity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create EPA profile for modified identities — method-modify-identity","text":"events data frame M (modifier) (identity) columns","code":""},{"path":"https://acastroaraujo.github.io/actsims/reference/method-modify-identity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create EPA profile for modified identities — method-modify-identity","text":"new dictionary rating modified identities","code":""},{"path":[]},{"path":"https://acastroaraujo.github.io/actsims/reference/method-modify-identity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create EPA profile for modified identities — method-modify-identity","text":"","code":"act <- interact() #> ✔ dictionary = list(dataset = \"usfullsurveyor2015\", group = \"all\") #> ✔ equations = list(key = \"us2010\", group = \"all\")  act$add_equation(type = \"traitid\", group = \"all\") #> ✔ traitid = list(key = \"us2010\", group = \"all\")  new_term <- act$modify_identity(list(M = \"angry\", I = \"doctor\")) new_term #> # A tibble: 1 × 3 #>   term          component ratings   #>   <chr>         <chr>     <list>    #> 1 angry__doctor identity  <dbl [3]> new_term$ratings #> [[1]] #>         e         p         a  #> -1.050056  2.253300  1.078900  #>   grid <- data.frame(   M = c(\"tired\", \"taciturn\", \"angry\", \"happy\"),   I = c(\"academic\", \"academic\", \"academic\", \"academic\") )  act$modify_identity(grid) #> # A tibble: 4 × 3 #>   term               component ratings   #>   <chr>              <chr>     <list>    #> 1 tired__academic    identity  <dbl [3]> #> 2 taciturn__academic identity  <dbl [3]> #> 3 angry__academic    identity  <dbl [3]> #> 4 happy__academic    identity  <dbl [3]>"},{"path":"https://acastroaraujo.github.io/actsims/reference/method-optimal-behavior.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Optimal Behavior for the Actor or Object following an Event — method-optimal-behavior","title":"Calculate the Optimal Behavior for the Actor or Object following an Event — method-optimal-behavior","text":"$optimal_behavior() method ..","code":""},{"path":"https://acastroaraujo.github.io/actsims/reference/method-optimal-behavior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Optimal Behavior for the Actor or Object following an Event — method-optimal-behavior","text":"","code":"optimal_behavior(x, who = c(\"actor\", \"object\"))"},{"path":"https://acastroaraujo.github.io/actsims/reference/method-optimal-behavior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Optimal Behavior for the Actor or Object following an Event — method-optimal-behavior","text":"x \"Event deflection\" object created $deflection() method (character) either \"actor\" \"object\"","code":""},{"path":"https://acastroaraujo.github.io/actsims/reference/method-optimal-behavior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Optimal Behavior for the Actor or Object following an Event — method-optimal-behavior","text":"data frame EPA profiles optimal behavior","code":""},{"path":[]},{"path":"https://acastroaraujo.github.io/actsims/reference/method-optimal-behavior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Optimal Behavior for the Actor or Object following an Event — method-optimal-behavior","text":"","code":"act <- interact() #> ✔ dictionary = list(dataset = \"usfullsurveyor2015\", group = \"all\") #> ✔ equations = list(key = \"us2010\", group = \"all\")  events <- rbind(   data.frame(A = \"ceo\", B = \"rescue\", O = \"baby\"),   data.frame(A = \"ceo\", B = \"torment\", O = \"baby\") )  d <- act$deflection(events) d #> # Event deflection #> # A data frame: 2 × 4 #>   A     B       O     deflection #> * <chr> <chr>   <chr>      <dbl> #> 1 ceo   rescue  baby        4.44 #> 2 ceo   torment baby       50.1  act$optimal_behavior(d, who = \"actor\") #> # A tibble: 2 × 3 #>       Be    Bp    Ba #>    <dbl> <dbl> <dbl> #> 1  0.901  2.17  1.18 #> 2 -1.32   1.51  1.24 act$optimal_behavior(d, who = \"object\") #> # A tibble: 2 × 3 #>        Be     Bp    Ba #>     <dbl>  <dbl> <dbl> #> 1 -0.0353 -0.821 0.484 #> 2 -0.167   1.11  0.443"},{"path":"https://acastroaraujo.github.io/actsims/reference/method-reidentify.html","id":null,"dir":"Reference","previous_headings":"","what":"Reidentification of actor or object, following an event — method-reidentify","title":"Reidentification of actor or object, following an event — method-reidentify","text":"$reidentify() method ..","code":""},{"path":"https://acastroaraujo.github.io/actsims/reference/method-reidentify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reidentification of actor or object, following an event — method-reidentify","text":"","code":"reidentify(x, who = c(\"actor\", \"object\"))"},{"path":"https://acastroaraujo.github.io/actsims/reference/method-reidentify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reidentification of actor or object, following an event — method-reidentify","text":"x \"event deflection\" object created $deflection() method (character) either \"actor\" \"object\"","code":""},{"path":"https://acastroaraujo.github.io/actsims/reference/method-reidentify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reidentification of actor or object, following an event — method-reidentify","text":"data frame EPA profiles optimal re-identification","code":""},{"path":[]},{"path":"https://acastroaraujo.github.io/actsims/reference/method-reidentify.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reidentification of actor or object, following an event — method-reidentify","text":"","code":"act <- interact() #> ✔ dictionary = list(dataset = \"usfullsurveyor2015\", group = \"all\") #> ✔ equations = list(key = \"us2010\", group = \"all\")  events <- rbind(   data.frame(A = \"ceo\", B = \"rescue\", O = \"baby\"),   data.frame(A = \"ceo\", B = \"torment\", O = \"baby\") )  d <- act$deflection(events) d #> # Event deflection #> # A data frame: 2 × 4 #>   A     B       O     deflection #> * <chr> <chr>   <chr>      <dbl> #> 1 ceo   rescue  baby        4.44 #> 2 ceo   torment baby       50.1  act$reidentify(d, who = \"actor\") #> # A tibble: 2 × 3 #>       Ae    Ap    Aa #>    <dbl> <dbl> <dbl> #> 1  0.515  3.44  2.05 #> 2 -1.52   1.47  1.05 act$reidentify(d, who = \"object\") #> # A tibble: 2 × 3 #>       Oe    Op    Oa #>    <dbl> <dbl> <dbl> #> 1  3.87  -2.25  4.51 #> 2 -0.540 -3.60 -3.10"},{"path":"https://acastroaraujo.github.io/actsims/reference/sttn_family.html","id":null,"dir":"Reference","previous_headings":"","what":"Situation Functions — sttn_family","title":"Situation Functions — sttn_family","text":"Start, new, activate, extract.","code":""},{"path":"https://acastroaraujo.github.io/actsims/reference/sttn_family.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Situation Functions — sttn_family","text":"","code":"sttn_activate(x, which)  sttn_start(x, event)  sttn_new(x, event)  sttn_extract(x)"},{"path":"https://acastroaraujo.github.io/actsims/reference/sttn_family.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Situation Functions — sttn_family","text":"x R6 \"Situation\" object created define_situation() function. (character) either \"agent1\" \"agent2.\" event ABO event.","code":""},{"path":"https://acastroaraujo.github.io/actsims/reference/sttn_family.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Situation Functions — sttn_family","text":"modified \"Situation\" object.","code":""},{"path":"https://acastroaraujo.github.io/actsims/reference/sttn_family.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Situation Functions — sttn_family","text":"","code":"situation <- define_situation(agent1 = interact(), agent2 = interact()) #> ✔ dictionary = list(dataset = \"usfullsurveyor2015\", group = \"all\") #> ✔ equations = list(key = \"us2010\", group = \"all\") #> ✔ dictionary = list(dataset = \"usfullsurveyor2015\", group = \"all\") #> ✔ equations = list(key = \"us2010\", group = \"all\")  df <- situation |>   sttn_activate(\"agent1\") |>   sttn_start(list(A = \"employer\", B = \"hurt\", O = \"employee\")) |>   sttn_activate(\"agent2\") |>   sttn_new(list(A = \"employee\", B = \"pull_away_from\", O = \"employer\")) |>   sttn_activate(\"agent1\") |>   sttn_new(list(A = \"employer\", B = \"confront\", O = \"employee\")) |>   sttn_extract()    df$deflection #> # A tibble: 3 × 7 #>    time agent1 agent2 A        B              O        deflection #>   <int> <chr>  <chr>  <chr>    <chr>          <chr>         <dbl> #> 1     0 A      O      employer hurt           employee       43.5 #> 2     1 O      A      employee pull_away_from employer       19.2 #> 3     2 A      O      employer confront       employee       13.3    df$transients #> # A tibble: 3 × 15 #>    time agent1 agent2 A      B     O         Ae    Ap    Aa     Be     Bp     Ba #>   <int> <chr>  <chr>  <chr>  <chr> <chr>  <dbl> <dbl> <dbl>  <dbl>  <dbl>  <dbl> #> 1     0 A      O      emplo… hurt  empl… -1.79   3.05  1.62 -2.38   2.79   1.55  #> 2     1 O      A      emplo… pull… empl… -0.486 -1.26 -1.33 -0.472 -0.449 -0.680 #> 3     2 A      O      emplo… conf… empl… -0.662  1.83  1.35 -0.607  1.76   1.28  #> # ℹ 3 more variables: Oe <dbl>, Op <dbl>, Oa <dbl>"}]
